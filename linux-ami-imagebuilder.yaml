AWSTemplateFormatVersion: '2010-09-09'
Description: |
  This template builds an EC2 AMI based on Amazon Linux2 ARM64 and installs software to demonstrate an AWS CodePipeline driven AMI building use-case using EC2 ImageBuilder. (qs-1tkj0sj93)

Parameters:
  AWSRegion:
    Type: String
    Description: Define in which region you want to build and deploy the pipeline
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC) to be used to build the AMI
  SubnetId:
    Type: String
    Description: SubnetId of an existing subnet in your VPC
  SSHKeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
  SSHLocation:
    Type: String
    Description: The IP address range that can be used to SSH to the EC2 instances
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
  Version:
    Type: String
    Description: Version number for the ImageBuilder Component
    Default: 0.0.1
  Architecture:
    Type: String
    Description: Select between x86 and ARM instances
    Default: arm64
    AllowedValues: [x86, arm64]
  InstanceType:
    Type: String
    Description: Instance Type for building the instances
    Default: t4g.micro
  BaseImageId:
    Type: AWS::EC2::Image::Id
    Description: The base AMI ID to build upon (must be Amazon Linux 2 ARM64)

Resources:
  LinuxImage:
    Type: AWS::ImageBuilder::Image
    Properties:
      ImageRecipeArn: !Ref LinuxImageRecipe
      InfrastructureConfigurationArn: !Ref InfrastructureConfiguration
      EnhancedImageMetadataEnabled: true
      
  LinuxImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Name: !Sub '${AWS::StackName}-Image-${AWS::Region}'
      Description: !Sub '${AWS::StackName} Image (${Architecture}) version ${Version}'
      Components:
        - ComponentArn: !Ref YumUpdateComponent
        - ComponentArn: !Ref SetLocaleComponent
        - ComponentArn: !Sub 'arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:component/aws-cli-version-2-linux/1.0.0'
        - ComponentArn: !Sub 'arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:component/amazon-cloudwatch-agent-linux/1.0.0'
        - ComponentArn: !Sub 'arn:${AWS::Partition}:imagebuilder:${AWS::Region}:aws:component/stig-build-linux-low/1.0.0'
      ParentImage: !Ref BaseImageId
      Version: !Ref Version
      WorkingDirectory: /tmp
      
  InfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      InstanceProfileName: !Ref InstanceProfile
      InstanceTypes: 
        - !Ref InstanceType
      Name: !Sub '${AWS::StackName}-InfraConfig'
      KeyPair: !Ref SSHKeyPairName
      TerminateInstanceOnFailure: false
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      SubnetId: !Ref SubnetId
      Logging:
        S3Logs:
          S3BucketName: !Ref LogBucket
          S3KeyPrefix: imagebuilder/

  SetLocaleComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub '${AWS::StackName}-Component-Locale'
      Platform: Linux
      Version: !Ref Version
      Data: |
        name: setlocale global
        description: Set locale settings
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: Locale
                action: ExecuteBash
                inputs:
                  commands:
                    - echo "LANG=en_US.utf-8" >> /etc/environment
                    - echo "LC_ALL=en_US.utf-8" >> /etc/environment
                    - localectl set-locale LANG=en_US.UTF-8
          - name: validate
            steps:
              - name: checkLocale
                action: ExecuteBash
                inputs:
                  commands:
                    - localectl status

  YumUpdateComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub '${AWS::StackName}-Component-YumUpdate'
      Platform: Linux
      Version: !Ref Version
      Data: |
        name: yum update
        description: Update system packages
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: UpdatePackages
                action: ExecuteBash
                inputs:
                  commands:
                    - set -e
                    - sudo yum update -y || (echo "Package update failed" && exit 1)
                    - echo "Package update completed successfully"

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupName: !Sub '${AWS::StackName}-SG'
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder
      Policies:
        - PolicyName: S3LogAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${LogBucket}/*'

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-logs-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled

Outputs:
  ImageArn:
    Description: Reference to EC2 Image Builder Output Arn
    Value: !GetAtt LinuxImage.Arn
  ImageId:
    Description: Reference to EC2 Image Builder Output ImageId
    Value: !GetAtt LinuxImage.ImageId
